-- Load the t7 files generated by the server and shrink them to the statistics of the stop

require 'image'

print '==> Loading the kitti dataset'
torch.setdefaulttensortype('torch.FloatTensor')
local kitti = torch.load('scratch/kitti.t7')
trainData = kitti.trainData
trSize = trainData:size()
testData = kitti.testData
teSize = testData:size()
trainData.labels =trainData.labels:float()
testData.labels = testData.labels:float()

image.display{image=trainData.data[{{kitti.bgTrSize+1-64,kitti.bgTrSize+64}}], nrow=16, zoom=2, legend = 'Train data'}
image.display{image=testData.data[{{kitti.bgTeSize+1-64,kitti.bgTeSize+64}}], nrow=16, zoom=2, legend = 'Test data'}

-- Displaying the dataset architecture ---------------------------------------
print('Training Data:')
print(trainData)
print()
print(string.format('Training bg: %d, training car: %d',trainData.labels:eq(0):sum(),trainData.labels:eq(1):sum()))

print('Test Data:')
print(testData)
print()

-- Preprocessing -------------------------------------------------------------
dofile 'preprocessing.lua'

-- Exports -------------------------------------------------------------------
return {
   trainData = trainData,
   testData = testData
}
